name: Deploy to Production

on:
  push:
    tags:
      - 'v*'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set env variables
        run: |
          echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          echo "BACKEND_IMAGE=${{ github.repository_owner }}/skyjo-backend:${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          echo "FRONTEND_IMAGE=${{ github.repository_owner }}/skyjo-frontend:${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      # Création du fichier .env à partir du template
      - name: Generate .env file
        run: |
          envsubst < deploy/.env.template > deploy/.env
          cat << EOL >> deploy/.env
          
          # Variables spécifiques générées pour ce déploiement
          DEPLOYMENT_DATE=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
          DEPLOYMENT_TAG=${{ env.TAG }}
          EOL
          
          # Remplacement des variables avec les secrets
          sed -i "s|\${DB_USER}|${{ secrets.DB_USER }}|g" deploy/.env
          sed -i "s|\${DB_PASSWORD}|${{ secrets.DB_PASSWORD }}|g" deploy/.env
          sed -i "s|\${MYSQL_ROOT_PASSWORD}|${{ secrets.MYSQL_ROOT_PASSWORD }}|g" deploy/.env
          sed -i "s|\${JWT_SECRET}|${{ secrets.JWT_SECRET }}|g" deploy/.env
          sed -i "s|\${APP_URL}|${{ secrets.APP_URL }}|g" deploy/.env
          sed -i "s|\${EMAIL_HOST}|${{ secrets.EMAIL_HOST }}|g" deploy/.env
          sed -i "s|\${EMAIL_PORT}|${{ secrets.EMAIL_PORT }}|g" deploy/.env
          sed -i "s|\${EMAIL_USER}|${{ secrets.EMAIL_USER }}|g" deploy/.env
          sed -i "s|\${EMAIL_PASS}|${{ secrets.EMAIL_PASS }}|g" deploy/.env
          sed -i "s|\${EMAIL_FROM}|${{ secrets.EMAIL_FROM }}|g" deploy/.env
          
          # Injection des images Docker
          sed -i "s|\${FRONTEND_IMAGE}|${{ env.FRONTEND_IMAGE }}|g" deploy/.env
          sed -i "s|\${BACKEND_IMAGE}|${{ env.BACKEND_IMAGE }}|g" deploy/.env
          
          chmod +x deploy/deploy.sh

      # Téléchargement des images sur Docker Hub
      - name: Tag Docker images for release
        run: |
          echo "Tagging images with version tag: ${{ env.TAG }}"
          docker pull ${{ github.repository_owner }}/skyjo-backend:latest
          docker pull ${{ github.repository_owner }}/skyjo-frontend:latest
          docker tag ${{ github.repository_owner }}/skyjo-backend:latest ${{ github.repository_owner }}/skyjo-backend:${{ env.TAG }}
          docker tag ${{ github.repository_owner }}/skyjo-frontend:latest ${{ github.repository_owner }}/skyjo-frontend:${{ env.TAG }}
          
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Push tagged images
        run: |
          docker push ${{ github.repository_owner }}/skyjo-backend:${{ env.TAG }}
          docker push ${{ github.repository_owner }}/skyjo-frontend:${{ env.TAG }}

      # Vérification de la clé SSH 
      - name: Debug SSH key
        run: |
          echo "SSH key length: $(echo "${{ secrets.SSH_PRIVATE_KEY }}" | wc -c) characters"
          echo "SSH key starts with: $(echo "${{ secrets.SSH_PRIVATE_KEY }}" | head -1)"
        
      # Test de connexion SSH
      - name: Test SSH connection
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            echo "SSH connection successful"
            mkdir -p /tmp/test-deploy
            
      # Préparation du serveur
      - name: Prepare server directory
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            mkdir -p /opt/skyjo
            
      # Déploiement des fichiers
      - name: Deploy files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "deploy/docker-compose.yml,deploy/.env,deploy/deploy.sh"
          target: "/tmp"
          strip_components: 1
          
      # Exécution du déploiement
      - name: Execute deploy script
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cp /tmp/docker-compose.yml /opt/skyjo/
            cp /tmp/.env /opt/skyjo/
            cp /tmp/deploy.sh /opt/skyjo/
            chmod +x /opt/skyjo/deploy.sh
            cd /opt/skyjo
            ./deploy.sh 